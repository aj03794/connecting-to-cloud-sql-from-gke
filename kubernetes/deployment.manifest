apiVersion: apps/v1
kind: Deployment
metadata:
  name: connecting-to-cloudsql-from-gke
spec:
  selector:
    matchLabels:
      app: connecting-to-cloudsql-from-gke
  template:
    metadata:
      labels:
        app: connecting-to-cloudsql-from-gke
    spec:
      containers:
        - name: connecting-to-cloudsql-from-gke
          image: us-east1-docker.pkg.dev/analog-antler-328011/todos-repo/todos:v12
          # ... other container configuration
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: todos-db
                  key: host
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: todos-db
                  key: username
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: todos-db
                  key: password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: todos-db
                  key: database
        - name: cloud-sql-proxy
          # It is recommended to use the latest version of the Cloud SQL proxy
          # Make sure to update on a regular schedule!
          image: gcr.io/cloudsql-docker/gce-proxy:1.17
          command:
            - "/cloud_sql_proxy"

            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            - "-ip_address_types=PRIVATE"

            # Replace DB_PORT with the port the proxy should listen on
            # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
            - "-instances=analog-antler-328011:us-east1:todos=tcp:5432"

            # This flag specifies where the service account key can be found
            - "-credential_file=/secrets/service_account.json"
          securityContext:
            # The default Cloud SQL proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
          volumeMounts:
            - name: cloudsql-instance-credentials-volume
              mountPath: /secrets/
              readOnly: true
          # Resource configuration depends on an application's requirements. You
          # should adjust the following values based on what your application
          # needs. For details, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
#          resources:
#            requests:
              # The proxy's memory use scales linearly with the number of active
              # connections. Fewer open connections will use less memory. Adjust
              # this value based on your application's requirements.
#              memory: "256Mi"
              # The proxy's CPU use scales linearly with the amount of IO between
              # the database and the application. Adjust this value based on your
              # application's requirements.
#              cpu: "500m"
      volumes:
        - name: cloudsql-instance-credentials-volume
          secret:
            secretName: service-account